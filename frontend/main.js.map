{"version":3,"sources":["./src/app/items/add-item/add-item.component.ts","./src/app/items/add-item/add-item.component.html","./src/environments/environment.ts","./src/app/items/item.service.ts","./src/app/items/items-list/items-list.component.ts","./src/app/items/items-list/items-list.component.html","./src/app/items/data.service.ts","./src/app/items/edit-item/edit-item.component.ts","./src/app/items/edit-item/edit-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/items/item.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ItemService } from '../item.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.css']\n})\nexport class AddItemComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private itemService: ItemService) { }\n\n  addForm: FormGroup;\n  submitted = false;\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      count: ['', Validators.required],\n    });\n  }\n\n  checkUniqeId(itemsIds, id): boolean {\n    if(itemsIds.includes(id)){\n      alert(\"This id is already exist\")\n      return false;\n    }\n    else return true;\n  }\n\n  onSubmit(){\n    \n    this.submitted = true;\n    this.itemService.getAllItems().subscribe(\n      data => {\n      const items = data\n      const itemsIds = items.map((item) => item.id)\n\n      if(this.checkUniqeId(itemsIds, this.addForm.value.id)    //uniqeId\n        && this.addForm.valid) {                              //required\n          this.itemService.addItem(this.addForm.value)\n          .subscribe(() => {\n            this.router.navigate(['']);\n      });\n    } \n  });\n  }\n\n  // get the form short name to access the form fields\n  get f() { return this.addForm.controls; }\n\n}\n","<div class=\"form\">\n<div class=\"col-md-12\">\n<h2 class=\"text-center\">Add Item</h2>\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label>id:</label>\n        <input type=\"number\" formControlName=\"id\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\">\n        <div *ngIf=\"submitted && f.id.errors\">\n          <div *ngIf=\"f.id.errors.required\">id is required</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label>name:</label>\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\n        <div *ngIf=\"submitted && f.name.errors\">\n          <div *ngIf=\"f.name.errors.required\">name is required</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label>description:</label>\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\">\n        <div *ngIf=\"submitted && f.description.errors\">\n          <div *ngIf=\"f.description.errors.required\">description is required</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n          <label>count:</label>\n          <input type=\"number\" formControlName=\"count\" class=\"form-control\" \n          [ngClass]=\"{ 'is-invalid': submitted && f.count.errors }\" \n          min=\"0\" step=\"1\" oninput=\"validity.valid||(value='');\">\n          <div *ngIf=\"submitted && f.count.errors\">\n            <div *ngIf=\"f.count.errors.required\">count is required</div>\n          </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-info\">Save</button>\n    </form>\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Item } from '../items/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor(private http: HttpClient) { \n  }\n\n  baseurl: string = \"http://localhost:3000/\";\n  headers: any = {responseType: 'text'}\n \n\n  getAllItems(){\n    return this.http.get<Item[]>(this.baseurl + 'items');\n  }\n\n  getItemById(id: Number){\n    return this.http.get<Item>(this.baseurl + 'items/' + id);\n  }\n\n  addItem(item: Item){\n    return this.http.post(this.baseurl + 'items/add', item, this.headers);\n  }\n\n  deleteItem(id: Number){\n    console.log(\"fetch\")\n    return this.http.delete(this.baseurl + 'items/' + id, this.headers);\n  }\n\n  updateItem(id, item: Item){\n    return this.http.put(this.baseurl + 'items/' + id, item, this.headers);\n  }\n\n  deposit(id, count: Number){\n    return this.http.put(this.baseurl + 'items/deposit/' + id, {deposit: count}, this.headers);\n  }\n\n  withdraw(id, count: Number){\n    return this.http.put(this.baseurl + 'items/withdraw/' + id, {withdraw: count}, this.headers);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Item } from '../item';\nimport { ItemService } from '../item.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-items-list',\n  templateUrl: './items-list.component.html',\n  styleUrls: ['./items-list.component.css']\n})\nexport class ItemsListComponent implements OnInit {\n\n  items: Item[];\n  isUpdating: boolean;\n  private toggleText: string = \"Edit\";\n  private show: boolean = false;\n  private curItem: Item = null;\n\n  constructor(private itemService: ItemService, private router: Router, private dataService: DataService) { \n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.getAllItems();\n    }\n        ,200);\n  }\n\n  sortingById(a, b): number {\n    return (a.id - b.id); \n  }\n\n  getAllItems(): void {\n    this.itemService.getAllItems().subscribe(data=>{\n      data.sort((a, b) => this.sortingById(a,b));\n      this.items = data;\n    });\n  };\n\n  addItem(): void {\n    this.router.navigate(['add-item']);\n  }\n\n  deleteItem(item: Item){\n    this.itemService.deleteItem(item.id).subscribe(() => {\n        setTimeout(() => \n            this.getAllItems()\n            ,200);\n    });\n  }\n  \n  updateProduct(item: Item){\n    this.dataService.itemUpdate = item;\n    localStorage.removeItem(\"itemId\");\n    localStorage.setItem(\"itemId\", item.id.toString());\n    this.router.navigate(['edit-item']);\n  }\n  \n  onToggle(item): void {\n    this.curItem = item;\n    this.show = !this.show;\n    this.toggleText = this.show ? \"Cancel\" : \"Edit\";\n  }\n\n  deposit(item: Item): void {\n    const count = (<HTMLInputElement>document.getElementById(item.id.toString())).value;\n    if(count != '') {\n        this.itemService.deposit(item.id, parseInt(count)).subscribe(()=>{\n          setTimeout(() => \n                this.getAllItems()\n                ,200); \n      });\n    }\n}\n  withdraw(item: Item): void {\n    const count = (<HTMLInputElement>document.getElementById(item.id.toString())).value;\n    if(count != '') {\n        this.itemService.withdraw(item.id, parseInt(count)).subscribe(()=>{\n          setTimeout(() => \n                this.getAllItems()\n                ,200); \n      });\n    }\n  }\n}","<div class=\"container col-md-12\"> \n  \n  <h2>Items List</h2>\n<div class=\"content\">\n  <div class=\"addBtn\">\n    <button (click)=\"addItem()\" class=\"btn btn-info\">Add Item</button>\n  </div> \n\n  <div class=\"table\">\n  <div class=\"table-responsive table-container\">  \n    <table class=\"table table-striped\">  \n      <thead class=\"table-info\">  \n        <tr>  \n          <th>id</th>  \n          <th>name</th> \n          <th>description</th> \n          <th>count</th>\n          <th></th>\n          <th></th>\n        </tr>  \n      </thead>  \n      <tbody>  \n        <tr *ngFor=\"let item of items\"> \n\n          <td>{{item.id}}</td>  \n          <td>{{item.name}}</td>\n          <td>{{item.description}}</td> \n          <td>{{item.count}}</td>\n          <td>\n            <div class=\"example-config\">\n              <button #anchor (click)=\"onToggle(item)\" class=\"btn btn-secondary\">{{this.show && curItem.id == item.id ? \"Cancel\" : \"Edit count\"}}</button>\n            </div>\n            <kendo-popup [anchor]=\"anchor\" (anchorViewportLeave)=\"show = false\" *ngIf=\"show && curItem.id == item.id\">\n                  <br/>\n                  <input type=\"number\" class=\"form-control\" id={{item.id}} placeholder=\"0\"\n                      min=\"0\" step=\"1\" oninput=\"validity.valid||(value='');\">\n                  <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus-circle\" fill=\"currentColor\" \n                    xmlns=\"http://www.w3.org/2000/svg\" (click)=\"deposit(item)\">\n                    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                  </svg>\n                  <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-dash-circle\" fill=\"currentColor\" \n                  xmlns=\"http://www.w3.org/2000/svg\" (click)=\"withdraw(item)\">\n                    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\n                  </svg>         \n            </kendo-popup>\n          </td>\n          <td>  \n            <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash-fill\" \n            fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" (click)=\"deleteItem(item)\">\n              <path fill-rule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\n            </svg>\n            <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" \n            fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" (click)=\"updateProduct(item)\">\n              <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n              <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n            </svg>\n          </td>  \n        </tr>  \n      </tbody>  \n    </table>  \n  </div> \n</div>\n</div> ","import { Injectable } from '@angular/core';\nimport { Item } from './item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  public itemUpdate: Item = new Item();\n\n  constructor() { }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ItemService } from '../item.service';\nimport { Router } from \"@angular/router\";\nimport { Item } from '../item';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-edit-item',\n  templateUrl: './edit-item.component.html',\n  styleUrls: ['./edit-item.component.css']\n})\nexport class EditItemComponent implements OnInit {\n\n  itemUpdate: Item;\n  editForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private itemService: ItemService,private dataService: DataService) { }\n\n  ngOnInit() {\n    let itemId = localStorage.getItem(\"itemId\");\n    if(!itemId){\n      alert(\"Something wrong!\");\n        this.router.navigate(['']);\n    }\n    else\n        this.itemUpdate = this.dataService.itemUpdate;  \n\n    this.editForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      count: ['', Validators.required],\n    });\n  }\n\n  checkUniqeId(itemsIds, id): boolean {\n    if(itemsIds.includes(id)){\n      alert(\"This id is already exist\")\n      return false;\n    }\n    else return true;\n  }\n\n  onSubmit(){\n    this.submitted = true;\n\n    this.itemService.getAllItems().subscribe(\n      data => {\n      const items = data\n      const itemsIds = items.map((item) => item.id)\n\n      if(this.checkUniqeId(itemsIds, this.editForm.value.id)    //uniqeId\n        && this.editForm.valid) {\n      this.itemService.updateItem(localStorage.getItem(\"itemId\"), this.editForm.value)\n      .subscribe( () => {\n        this.router.navigate(['']);\n      });\n      }\n    });\n  }\n\n  // get the form short name to access the form fields\n  get f() { return this.editForm.controls; }\n}\n\n\n","<div class=\"form\">\n<div class=\"col-md-12\">\n    <h2 class=\"text-center\">Edit Product</h2>\n    <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"form-group\">\n        <label>id:</label>\n        <input type=\"number\" formControlName=\"id\" placeholder=\"{{itemUpdate.id}}\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\">\n        <div *ngIf=\"submitted && f.id.errors\">\n          <div *ngIf=\"f.id.errors.required\">id is required</div>\n        </div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label>name:</label>\n        <input type=\"text\" formControlName=\"name\" placeholder=\"{{itemUpdate.name}}\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\n        <div *ngIf=\"submitted && f.name.errors\">\n          <div *ngIf=\"f.name.errors.required\">name is required</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label>Description:</label>\n        <input type=\"text\" formControlName=\"description\" placeholder=\"{{itemUpdate.description}}\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\">\n        <div *ngIf=\"submitted && f.description.errors\">\n          <div *ngIf=\"f.description.errors.required\">description is required</div>\n        </div>\n      </div>\n  \n      <div class=\"form-group\">\n          <label>count:</label>\n          <input type=\"number\" formControlName=\"count\" placeholder=\"{{itemUpdate.count}}\" \n              class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.count.errors }\"\n              min=\"0\" step=\"1\" oninput=\"validity.valid||(value='');\">\n          <div *ngIf=\"submitted && f.count.errors\">\n            <div *ngIf=\"f.count.errors.required\">count is required</div>\n          </div>\n      </div>\n  \n      <button type=\"submit\"  class=\"btn btn-info\">Update</button>\n    </form>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from \"@angular/forms\"; \n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ItemService} from './items/item.service';\nimport { ItemsListComponent } from './items/items-list/items-list.component';\nimport { AddItemComponent } from './items/add-item/add-item.component';\nimport { EditItemComponent } from './items/edit-item/edit-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemsListComponent,\n    AddItemComponent,\n    EditItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [ItemService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Item {\n    id: Number;\n    name: String;\n    description: String;\n    count: Number;\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ItemsListComponent } from './items/items-list/items-list.component';\nimport { AddItemComponent } from './items/add-item/add-item.component';\nimport { EditItemComponent } from './items/edit-item/edit-item.component';\n\nconst routes: Routes = [\n  { path: '', component: ItemsListComponent, pathMatch: 'full' },\n  { path: 'add-item', component: AddItemComponent },\n  { path: 'edit-item', component: EditItemComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}